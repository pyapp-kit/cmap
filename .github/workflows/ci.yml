name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # every week

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install check-manifest && check-manifest

  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.12"]
        platform: [ubuntu-latest, windows-latest]
        include:
          - python-version: "3.9"
            platform: ubuntu-latest
          - python-version: "3.10"
            platform: ubuntu-latest
          - python-version: "3.11"
            platform: ubuntu-latest
          - python-version: "3.8"
            platform: macos-13
          - python-version: "3.12"
            platform: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-path: "pyproject.toml"
          cache: "pip"

      - uses: tlambert03/setup-qt-libs@v1

      - name: Install dependencies

        run: |
          python -m pip install -U pip
          python -m pip install -e .[test_min]

      - name: Run test
        run: pytest -v

      - name: Install third-party dependencies
        if: runner.os != 'Windows'
        run: |
          python -m pip install -e .[test_thirdparty] ${{ github.event_name == 'schedule' && '--pre' || ''  }}
          python -m pip install PyQt6==6.5.3

      - name: Run test
        if: runner.os != 'Windows'
        uses: aganders3/headless-gui@v2.2
        with:
          run: pytest -v --cov=cmap --cov-report=xml --cov-report=term-missing

      - name: Coverage
        if: runner.os != 'Windows'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: install
        run: |
          git tag
          pip install -U pip
          pip install -U build twine
          python -m build
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
